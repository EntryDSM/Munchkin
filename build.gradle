buildscript {
    ext {
        dependencyManagementVersion = '1.0.10.RELEASE' as Object
        springBootVersion = '2.2.1.RELEASE'
    }

    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }

    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:${dependencyManagementVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'

    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        }
        dependencies {

        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        implementation 'org.slf4j:slf4j-api'
        implementation 'com.squareup.okhttp3:okhttp:4.9.0'
        compile 'org.springframework.boot:spring-boot-starter-security'

        implementation 'com.amazonaws:aws-java-sdk-ses:1.11.852'
        implementation 'com.amazonaws:aws-java-sdk-s3control:1.11.457'

        compile 'org.springframework.boot:spring-boot-starter-data-redis'

        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        testImplementation 'org.springframework.security:spring-security-test'
    }

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    compileJava.options.encoding = 'UTF-8'

    test {
        useJUnitPlatform()
    }

    jacocoTestReport {
        reports {
            xml.enabled true
            html.enabled false
        }
    }
}

project(':main') {
    apply plugin: 'org.springframework.boot'

    dependencies {
        compile project(':user')
        compile project(':admin')
        compile project(':application')
        compile project(':score')
    }
}

project(':common') {
    dependencies {
        compile 'io.jsonwebtoken:jjwt:0.9.1'
        compile 'org.springframework:spring-context'
        compile 'org.springframework:spring-context-support'
        compile 'org.springframework.boot:spring-boot-starter-web'
        compile 'org.springframework.boot:spring-boot-starter-data-jpa'
        compile 'org.springframework.boot:spring-boot-starter-validation'

        compile 'mysql:mysql-connector-java'
    }
}

project(':user') {
    dependencies {
        compile project(':common')
    }
}

project(':admin') {
    dependencies {
        compile project(':common')
        compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.2'
        testImplementation 'com.h2database:h2'
        compile 'org.springframework.boot:spring-boot-starter-security'
        compile 'org.apache.poi:poi:3.16'
        compile 'org.apache.poi:poi-ooxml:3.16'
    }
}

project(':application') {
    dependencies {
        compile project(':common')
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
        implementation 'com.itextpdf:itext7-core:7.1.9'
        implementation 'com.itextpdf:html2pdf:3.0.1'
        implementation group: 'ognl', name: 'ognl', version: '3.1.12'
        implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3control', version: '1.11.457'
        implementation group: 'org.imgscalr', name: 'imgscalr-lib', version: '4.2'
    }
}

project(':score') {
    dependencies {
        compile project(':common')
    }
}
